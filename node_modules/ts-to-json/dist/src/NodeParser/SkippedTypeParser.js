"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkippedTypeParser = void 0;
const StaticType_1 = require("../Type/StaticType");
const isInSkipTypes_1 = require("../Utils/isInSkipTypes");
const Utils_1 = require("../Utils");
const UnknownType_1 = require("../Type/UnknownType");
const Utils_2 = require("../Utils");
class SkippedTypeParser {
    constructor(config) {
        this.config = config;
    }
    supportsNode(node) {
        if ((0, Utils_1.isInForceParseTypes)(node, this.config))
            return false;
        if ((0, isInSkipTypes_1.isInSkipTypes)(node, this.config)) {
            return true;
        }
        return false;
    }
    createType(node, context) {
        const name = (0, Utils_2.getNodeName)(node);
        if (this.config &&
            this.config.skipParseTypes &&
            this.config.skipParseTypes.includes("function") &&
            (0, Utils_2.isFunctionKind)(node)) {
            return new StaticType_1.StaticType("function");
        }
        if (name)
            return new StaticType_1.StaticType(name);
        return new UnknownType_1.UnknownType();
    }
}
exports.SkippedTypeParser = SkippedTypeParser;
//# sourceMappingURL=SkippedTypeParser.js.map