{
  "version": 3,
  "sources": ["../../../../result/definitions/__tests__/mass.test.ts"],
  "sourcesContent": ["import configureMeasurements from '../..';\nimport mass, { MassSystems, MassUnits } from '../mass';\n\ntest('lb to lb', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('lb').to('lb')).toBe(1);\n});\n\ntest('lb to oz', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('lb').to('oz')).toBe(16);\n});\n\ntest('oz to lb', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('oz').to('lb')).toBe(1 / 16);\n});\n\ntest('oz to oz', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(6).from('oz').to('oz')).toBe(6);\n});\n\ntest('kg to kg', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('kg').to('kg')).toBe(1);\n});\n\ntest('kg to g', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('kg').to('g')).toBe(1000);\n});\n\ntest('g to kg', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('g').to('kg')).toBe(1 / 1000);\n});\n\ntest('g to g', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(100).from('g').to('g')).toBe(100);\n});\n\ntest('lb to kg', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('lb').to('kg')).toBeCloseTo(0.453592);\n});\n\ntest('g to lb', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(1).from('g').to('lb')).toBeCloseTo(0.00220462);\n});\n\ntest('lb to g', () => {\n  const convert = configureMeasurements<'mass', MassSystems, MassUnits>({\n    mass,\n  });\n  expect(convert(3).from('lb').to('g')).toBeCloseTo(1360.78);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,eAAkC;AAClC,kBAA6C;AAE7C,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,KAAK;AAAA;AAG9C,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,KAAK;AAAA;AAG9C,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,KAAK,IAAI;AAAA;AAGlD,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,KAAK;AAAA;AAG9C,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,KAAK;AAAA;AAG9C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,KAAK,GAAG,OAAO,KAAK,IAAI;AAAA;AAGjD,KAAK,UAAU,MAAM;AACnB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,KAAK,KAAK,KAAK,GAAG,MAAM,KAAK;AAAA;AAG9C,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,YAAY;AAAA;AAGrD,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,KAAK,GAAG,OAAO,YAAY;AAAA;AAGpD,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAAsD;AAAA,IACpE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,YAAY;AAAA;",
  "names": []
}
