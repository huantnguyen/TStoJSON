{
  "version": 3,
  "sources": ["../../../../result/definitions/__tests__/speed.test.ts"],
  "sourcesContent": ["import configureMeasurements from '../..';\nimport speed, { SpeedSystems, SpeedUnits } from '../speed';\n\ntest('m/s to m/s', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(1).from('m/s').to('m/s')).toBe(1);\n});\n\ntest('m/s to km/h', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(1).from('m/s').to('km/h')).toBe(3.6);\n});\n\ntest('mph to mph', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(6).from('mph').to('mph')).toBe(6);\n});\n\ntest('mph to knot', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(2).from('mph').to('knot')).toBeCloseTo(1.73795);\n});\n\ntest('mph to ft/s', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(3).from('mph').to('ft/s')).toBeCloseTo(4.4);\n});\n\ntest('m/s to knot', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(8).from('m/s').to('knot')).toBeCloseTo(15.5508);\n});\n\ntest('mph to km/h', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(12).from('mph').to('km/h')).toBeCloseTo(19.3121);\n});\n\ntest('ft/s to ft/min', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(1).from('ft/s').to('ft/min')).toBeCloseTo(60);\n});\n\ntest('m/s to ft/min', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(1).from('m/s').to('ft/min')).toBeCloseTo(196.85);\n});\n\ntest('in/s to mm/s', () => {\n  const convert = configureMeasurements<'speed', SpeedSystems, SpeedUnits>({\n    speed,\n  });\n  expect(convert(1).from('in/h').to('mm/h')).toBeCloseTo(25.4);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,eAAkC;AAClC,mBAAgD;AAEhD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGhD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,SAAS,KAAK;AAAA;AAGjD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGhD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;AAGxD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;AAGxD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;AAGxD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,IAAI,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;AAGzD,KAAK,kBAAkB,MAAM;AAC3B,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,QAAQ,GAAG,WAAW,YAAY;AAAA;AAG3D,KAAK,iBAAiB,MAAM;AAC1B,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,WAAW,YAAY;AAAA;AAG1D,KAAK,gBAAgB,MAAM;AACzB,QAAM,UAAU,sBAAyD;AAAA,IACvE;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,QAAQ,GAAG,SAAS,YAAY;AAAA;",
  "names": []
}
