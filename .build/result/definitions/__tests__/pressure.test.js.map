{
  "version": 3,
  "sources": ["../../../../result/definitions/__tests__/pressure.test.ts"],
  "sourcesContent": ["import configureMeasurements from '../..';\nimport pressure, { PressureSystems, PressureUnits } from '../pressure';\n\ntest('Pa to Pa', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(1).from('Pa').to('Pa')).toBe(1);\n});\n\ntest('Pa to kPa', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(2000).from('Pa').to('kPa')).toBe(2);\n});\n\ntest('kPa to Pa', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(1).from('kPa').to('Pa')).toBe(1000);\n});\n\ntest('kPa to hPa', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(20).from('kPa').to('hPa')).toBe(200);\n});\n\ntest('kPa to MPa', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(8000).from('kPa').to('MPa')).toBe(8);\n});\n\ntest('kPa to bar', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(6000).from('kPa').to('bar')).toBe(60);\n});\n\ntest('kPa to torr', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(532).from('kPa').to('torr')).toBeCloseTo(3990.33);\n});\n\ntest('psi to psi', () => {\n  const convert = configureMeasurements({\n    pressure,\n  });\n  expect(convert(10).from('psi').to('psi')).toBe(10);\n});\n\ntest('psi to ksi', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(10000).from('psi').to('ksi')).toBe(10);\n});\n\ntest('Pa to psi', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(10000).from('Pa').to('psi')).toBeCloseTo(1.450377);\n});\n\ntest('torr to ksi', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(51714.931860168974).from('torr').to('ksi')).toBeCloseTo(1);\n});\n\ntest('psi to hPa', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(10).from('psi').to('hPa')).toBeCloseTo(689.47573);\n});\n\ntest('psi to inHg', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(1).from('psi').to('inHg')).toBeCloseTo(2.03602);\n});\n\ntest('inHg to psi', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(1).from('inHg').to('psi')).toBeCloseTo(0.491154);\n});\n\ntest('inHg to Pa', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(1).from('inHg').to('Pa')).toBeCloseTo(3386.389);\n});\n\ntest('Pa to inHg', () => {\n  const convert = configureMeasurements<\n    'pressure',\n    PressureSystems,\n    PressureUnits\n  >({\n    pressure,\n  });\n  expect(convert(1013.25).from('hPa').to('inHg')).toBeCloseTo(29.92);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,eAAkC;AAClC,sBAAyD;AAEzD,KAAK,YAAY,MAAM;AACrB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,OAAO,KAAK;AAAA;AAG9C,KAAK,aAAa,MAAM;AACtB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,KAAM,KAAK,MAAM,GAAG,QAAQ,KAAK;AAAA;AAGlD,KAAK,aAAa,MAAM;AACtB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,OAAO,KAAK;AAAA;AAG/C,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,IAAI,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGjD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,KAAM,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGnD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,KAAM,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGnD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,KAAK,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;AAG1D,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAAsB;AAAA,IACpC;AAAA;AAEF,SAAO,QAAQ,IAAI,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGjD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,KAAO,KAAK,OAAO,GAAG,QAAQ,KAAK;AAAA;AAGpD,KAAK,aAAa,MAAM;AACtB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,KAAO,KAAK,MAAM,GAAG,QAAQ,YAAY;AAAA;AAG1D,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,oBAAoB,KAAK,QAAQ,GAAG,QAAQ,YAAY;AAAA;AAGzE,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,IAAI,KAAK,OAAO,GAAG,QAAQ,YAAY;AAAA;AAGxD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;AAGxD,KAAK,eAAe,MAAM;AACxB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,QAAQ,GAAG,QAAQ,YAAY;AAAA;AAGxD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,QAAQ,GAAG,OAAO,YAAY;AAAA;AAGvD,KAAK,cAAc,MAAM;AACvB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,SAAS,KAAK,OAAO,GAAG,SAAS,YAAY;AAAA;",
  "names": []
}
