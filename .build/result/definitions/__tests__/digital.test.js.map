{
  "version": 3,
  "sources": ["../../../../result/definitions/__tests__/digital.test.ts"],
  "sourcesContent": ["import configureMeasurements from '../..';\nimport digital, { DigitalSystems, DigitalUnits } from '../digital';\n\ntest('b to b', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('b').to('b')).toBe(1);\n});\n\ntest('Kb to b', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('Kb').to('b')).toBe(1024);\n});\n\ntest('Mb to b', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('Mb').to('b')).toBe(1048576);\n});\n\ntest('Gb to b', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('Gb').to('b')).toBe(1073741824);\n});\n\ntest('Tb to b', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('Tb').to('b')).toBe(1099511627776);\n});\n\ntest('B to B', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('B').to('B')).toBe(1);\n});\n\ntest('KB to B', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('KB').to('B')).toBe(1024);\n});\n\ntest('MB to B', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('MB').to('B')).toBe(1048576);\n});\n\ntest('GB to B', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('GB').to('B')).toBe(1073741824);\n});\n\ntest('TB to B', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('TB').to('B')).toBe(1099511627776);\n});\n\ntest('B to b', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('B').to('b')).toBe(8);\n});\n\ntest('b to B', () => {\n  const convert = configureMeasurements<\n    'digital',\n    DigitalSystems,\n    DigitalUnits\n  >({\n    digital,\n  });\n  expect(convert(1).from('b').to('B')).toBeCloseTo(0.125);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,eAAkC;AAClC,qBAAsD;AAEtD,KAAK,UAAU,MAAM;AACnB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,KAAK,GAAG,MAAM,KAAK;AAAA;AAG5C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,UAAU,MAAM;AACnB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,KAAK,GAAG,MAAM,KAAK;AAAA;AAG5C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,WAAW,MAAM;AACpB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,MAAM,GAAG,MAAM,KAAK;AAAA;AAG7C,KAAK,UAAU,MAAM;AACnB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,KAAK,GAAG,MAAM,KAAK;AAAA;AAG5C,KAAK,UAAU,MAAM;AACnB,QAAM,UAAU,sBAId;AAAA,IACA;AAAA;AAEF,SAAO,QAAQ,GAAG,KAAK,KAAK,GAAG,MAAM,YAAY;AAAA;",
  "names": []
}
