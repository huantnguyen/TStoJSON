{
  "version": 3,
  "sources": ["../../../result/definitions/time.ts"],
  "sourcesContent": ["import { Measure, Unit } from './../index';\nexport type TimeUnits = TimeSIUnits;\nexport type TimeSystems = 'SI';\n\nexport type TimeSIUnits =\n  | 'ns'\n  | 'mu'\n  | 'ms'\n  | 's'\n  | 'min'\n  | 'h'\n  | 'd'\n  | 'week'\n  | 'month'\n  | 'year';\n\nconst daysInYear = 365.25;\n\nconst SI: Record<TimeSIUnits, Unit> = {\n  ns: {\n    name: {\n      singular: 'Nanosecond',\n      plural: 'Nanoseconds',\n    },\n    to_anchor: 1 / 1000000000,\n  },\n  mu: {\n    name: {\n      singular: 'Microsecond',\n      plural: 'Microseconds',\n    },\n    to_anchor: 1 / 1000000,\n  },\n  ms: {\n    name: {\n      singular: 'Millisecond',\n      plural: 'Milliseconds',\n    },\n    to_anchor: 1 / 1000,\n  },\n  s: {\n    name: {\n      singular: 'Second',\n      plural: 'Seconds',\n    },\n    to_anchor: 1,\n  },\n  min: {\n    name: {\n      singular: 'Minute',\n      plural: 'Minutes',\n    },\n    to_anchor: 60,\n  },\n  h: {\n    name: {\n      singular: 'Hour',\n      plural: 'Hours',\n    },\n    to_anchor: 60 * 60,\n  },\n  d: {\n    name: {\n      singular: 'Day',\n      plural: 'Days',\n    },\n    to_anchor: 60 * 60 * 24,\n  },\n  week: {\n    name: {\n      singular: 'Week',\n      plural: 'Weeks',\n    },\n    to_anchor: 60 * 60 * 24 * 7,\n  },\n  month: {\n    name: {\n      singular: 'Month',\n      plural: 'Months',\n    },\n    to_anchor: (60 * 60 * 24 * daysInYear) / 12,\n  },\n  year: {\n    name: {\n      singular: 'Year',\n      plural: 'Years',\n    },\n    to_anchor: 60 * 60 * 24 * daysInYear,\n  },\n};\n\nconst measure: Measure<TimeSystems, TimeUnits> = {\n  systems: {\n    SI,\n  },\n};\n\nexport default measure;\n"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAgBA,MAAM,aAAa;AAEnB,MAAM,KAAgC;AAAA,EACpC,IAAI;AAAA,IACF,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,IAAI;AAAA;AAAA,EAEjB,IAAI;AAAA,IACF,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,IAAI;AAAA;AAAA,EAEjB,IAAI;AAAA,IACF,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,IAAI;AAAA;AAAA,EAEjB,GAAG;AAAA,IACD,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW;AAAA;AAAA,EAEb,KAAK;AAAA,IACH,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW;AAAA;AAAA,EAEb,GAAG;AAAA,IACD,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,KAAK;AAAA;AAAA,EAElB,GAAG;AAAA,IACD,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,KAAK,KAAK;AAAA;AAAA,EAEvB,MAAM;AAAA,IACJ,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,KAAK,KAAK,KAAK;AAAA;AAAA,EAE5B,OAAO;AAAA,IACL,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAY,KAAK,KAAK,KAAK,aAAc;AAAA;AAAA,EAE3C,MAAM;AAAA,IACJ,MAAM;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW,KAAK,KAAK,KAAK;AAAA;AAAA;AAI9B,MAAM,UAA2C;AAAA,EAC/C,SAAS;AAAA,IACP;AAAA;AAAA;AAIJ,IAAO,eAAQ;",
  "names": []
}
